package ru.lad.sp_811_fr.driver.utils

import android.util.Log

val SP_811_ERRORS = hashMapOf<String, String>(


    "00" to "Команда выполнена без ошибок",
    "01" to "Функция невыполнима при данном статусе ФР",
    "02" to "В команде указан неверный номер функции",
    "03" to "В команде указано неверное, больше чем максимально возможное или несоответствующее типу данных значение",
    "04" to "Переполнение буфера коммуникационного порта",
    "05" to "Таймаут при передаче байта информации",
    "06" to "В команде указан неверный пароль",
    "07" to "Ошибка контрольной суммы в команде",
    "08" to "Конец бумаги",
    "09" to "Принтер не готов",
    "10" to "Текущая смена больше 24 часов",
    "11" to "Разница во времени, ФР и указанной в команде инициализации больше 8 минут",
    "12" to "Вводимая дата более ранняя, чем дата последней фискальной операции",
    "65" to "Некорректное состояние СКНО (в том числе ошибки при формировании пакета)",
    "66" to "Слишком длинный пакет для передачи в СКНО (размер превышает 20 Кбайт)",
    "74" to "Нет связи с СКНО",
    "75" to "Ошибка ввода-вывода с СКНО",
    "13" to "Не был задан заголовок документа, что делает невозможным формирование фискального документа",
    "14" to "Отрицательный результат",
    "15" to "Дисплей покупателя не готов",
    "32" to "Фатальная ошибка ФР",
    "33" to "Нет свободного места в фискальной памяти ФР",
    "36" to "Нет запрашиваемых данных (нет контрольной ленты",


    )
val SP_811_FR_FATAL_ERRORS = hashMapOf<Number, String>(
    0 to "Неверная контрольная сумма NVR (счетчики смены, карта флэш-памяти)",
    1 to "Неверная контрольная сумма конфигурации в NVR",
    2 to "Ошибка OTP-памяти (ошибки чтения/записи или ошибки целостности данных)",
    3 to "Ошибка БЭП (ошибки чтения/записи и ошибки целостности данных)",
    4 to "Ошибка Flash-памяти (ошибки чтения/записи и ошибки целостности данных)",
    5 to "Инсталляция не была произведена",
    6 to "Неверный статус СКНО",
    7 to "Расхождение данных ФР и СКНО",

    )
val SP_811_FR_CURRENT_ERRORS = hashMapOf<Number, String>(
    0 to "Не была вызвана функция 00",
    1 to "Нефискальный режим",
    2 to "Смена открыта",
    3 to "Смена больше 24 часов",
    6 to "Нет памяти для закрытия смены в ФП",
    7 to "Был введен неверный пароль доступа к ФП",

    )
val SP_811_FR_DOC_ERRORS = hashMapOf<Number, String>(
    0 to "Документ закрыт",
    1 to "Нефискальный документ",
    2 to "Чек на продажу",
    3 to "Чек на возврат",
    4 to "Внесение в кассу",
    5 to "Инкассация",

    )

fun getFrFatalErrors(n: Int, errors: HashMap<Number, String>): MutableList<String> {
    val result = mutableListOf<String>()
    val data = toBinaryString(n, 8)
    for (i in 0..7) {

        if (checkBitInInt(n, i)) {
            result.add(errors.get(i)!!)
        }
    }
    return result
}




fun makeErrorByCodeInBytes(data: ByteArray): String? {
    val code = String(data)

    return SP_811_ERRORS.get(code)

}